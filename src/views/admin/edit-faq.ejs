<!-- src/views/admin/edit-faq.ejs -->
<div class="card">
    <div class="card-header">
        <h2>Edit FAQ</h2>
    </div>
    <div class="card-body">
        <form action="/admin/faqs/<%= faq._id %>?_method=PUT" 
              method="POST" 
              class="needs-validation" 
              novalidate>
            <div class="mb-3">
                <label for="question" class="form-label">Question</label>
                <input type="text" 
                       class="form-control" 
                       id="question" 
                       name="question" 
                       value="<%= faq.question %>" 
                       required>
                <div class="invalid-feedback">
                    Please provide a question.
                </div>
            </div>
            <div class="mb-3">
                <label for="answer" class="form-label">Answer</label>
                <div class="editor-container">
                    <textarea class="form-control" 
                              id="answer" 
                              name="answer" 
                              required><%- faq.answer %></textarea>
                    <div class="invalid-feedback">
                        Please provide an answer.
                    </div>
                </div>
            </div>
            <div class="d-flex gap-2">
                <button type="submit" class="btn btn-primary">
                    <i class="ri-save-line me-2"></i>Update FAQ
                </button>
                <a href="/admin" class="btn btn-secondary">
                    <i class="ri-arrow-left-line me-2"></i>Cancel
                </a>
            </div>
        </form>
    </div>
</div>

<!-- Show translations -->
<div class="card mt-4">
    <div class="card-header">
        <h3>Translations</h3>
    </div>
    <div class="card-body">
        <div class="accordion" id="translationsAccordion">
            <% ['hi', 'es', 'bn'].forEach((lang, index) => { %>
                <% const translation = faq.translations.get(lang) || {} %>
                <div class="accordion-item">
                    <h2 class="accordion-header" id="heading<%= lang %>">
                        <button class="accordion-button collapsed" 
                                type="button" 
                                data-bs-toggle="collapse"
                                data-bs-target="#collapse<%= lang %>" 
                                aria-expanded="false"
                                aria-controls="collapse<%= lang %>">
                            <%= lang.toUpperCase() %> Translation
                        </button>
                    </h2>
                    <div id="collapse<%= lang %>" 
                         class="accordion-collapse collapse"
                         aria-labelledby="heading<%= lang %>" 
                         data-bs-parent="#translationsAccordion">
                        <div class="accordion-body">
                            <div class="mb-3">
                                <label class="form-label">Question</label>
                                <div class="p-3 bg-light rounded">
                                    <%= translation.question || 'No translation available' %>
                                </div>
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Answer</label>
                                <div class="p-3 bg-light rounded">
                                    <%- translation.answer || 'No translation available' %>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            <% }) %>
        </div>
    </div>
</div>

<style>
.editor-container {
    margin-bottom: 1rem;
}

.cke_chrome {
    border: 1px solid #e2e8f0 !important;
    border-radius: 0.5rem !important;
    box-shadow: none !important;
}

.cke_top {
    border-bottom: 1px solid #e2e8f0 !important;
    background: #f8fafc !important;
    padding: 8px !important;
    border-radius: 0.5rem 0.5rem 0 0 !important;
}

.cke_bottom {
    border-top: 1px solid #e2e8f0 !important;
    background: #f8fafc !important;
    padding: 6px 8px !important;
    border-radius: 0 0 0.5rem 0.5rem !important;
}

.cke_contents {
    padding: 1rem !important;
    min-height: 300px !important;
}
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Initialize CKEditor
    CKEDITOR.replace('answer', {
        height: '300px',
        removePlugins: 'elementspath,resize',
        toolbar: [
            { name: 'basicstyles', items: ['Bold', 'Italic', 'Underline', 'Strike'] },
            { name: 'paragraph', items: ['NumberedList', 'BulletedList', '-', 'Blockquote'] },
            { name: 'links', items: ['Link', 'Unlink'] },
            { name: 'styles', items: ['Format'] },
            { name: 'tools', items: ['Maximize'] },
            { name: 'document', items: ['Source'] }
        ],
        format_tags: 'p;h2;h3;h4',
        removeButtons: '',
        contentsCss: ['https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css'],
        allowedContent: true,
        on: {
            instanceReady: function(ev) {
                // Set up form validation after editor is ready
                setupFormValidation();
                
                // Add Bootstrap classes to elements
                ev.editor.dataProcessor.htmlFilter.addRules({
                    elements: {
                        $: function(element) {
                            if (element.name == 'table') {
                                element.addClass('table');
                            }
                        }
                    }
                });
            }
        }
    });

    // Form validation setup
    function setupFormValidation() {
        const forms = document.querySelectorAll('.needs-validation');
        
        Array.from(forms).forEach(form => {
            form.addEventListener('submit', event => {
                if (!form.checkValidity()) {
                    event.preventDefault();
                    event.stopPropagation();
                }

                // Check if CKEditor is empty
                const editorContent = CKEDITOR.instances.answer.getData().trim();
                if (!editorContent) {
                    event.preventDefault();
                    event.stopPropagation();
                    // Add visual feedback
                    document.querySelector('.editor-container').classList.add('is-invalid');
                } else {
                    document.querySelector('.editor-container').classList.remove('is-invalid');
                }

                form.classList.add('was-validated');
            }, false);
        });
    }
});
</script>